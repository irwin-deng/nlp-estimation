> pip install -r requirements.txt
> python bootstrap.py
Using CUDA device NVIDIA GeForce RTX 3090
No sentence-transformers model found with name /root/.cache/torch/sentence_transformers/cardiffnlp_twitter-roberta-base-dec2021-tweet-topic-multi-all. Creating a new one with MEAN pooling.
Some weights of the model checkpoint at /root/.cache/torch/sentence_transformers/cardiffnlp_twitter-roberta-base-dec2021-tweet-topic-multi-all were not used when initializing RobertaModel: ['classifier.dense.weight', 'classifier.dense.bias', 'classifier.out_proj.bias', 'classifier.out_proj.weight']
- This IS expected if you are initializing RobertaModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing RobertaModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of RobertaModel were not initialized from the model checkpoint at /root/.cache/torch/sentence_transformers/cardiffnlp_twitter-roberta-base-dec2021-tweet-topic-multi-all and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Loading model...
Downloading datasets...
loaded size: 40000
Length of yahoo dataset: 40000
loaded size: 7600
Length of agnews dataset: 7600

Running experiment partitioning yahoo dataset into unlabeled and labeled
Unlabeled data is a subset of labeled data
labeled subset size: 4000/40000, unlabeled subset size: 400/40000

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 625/625 [01:39<00:00,  6.25it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1250/1250 [02:01<00:00, 10.32it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[0.0000e+00, 2.4156e+01, 2.2776e+01,  ..., 2.7416e+01, 2.7715e+01,
         2.9497e+01],
        [2.4156e+01, 0.0000e+00, 1.8069e+01,  ..., 2.7305e+01, 2.4081e+01,
         3.0222e+01],
        [2.2776e+01, 1.8069e+01, 2.5911e-02,  ..., 2.5682e+01, 2.5394e+01,
         2.8544e+01],
        ...,
        [2.7416e+01, 2.7305e+01, 2.5682e+01,  ..., 0.0000e+00, 2.6554e+01,
         2.3553e+01],
        [2.7715e+01, 2.4081e+01, 2.5394e+01,  ..., 2.6554e+01, 0.0000e+00,
         2.9192e+01],
        [2.9497e+01, 3.0222e+01, 2.8544e+01,  ..., 2.3553e+01, 2.9192e+01,
         1.9137e-02]], device='cuda:0')
full weights matrix: 
tensor([[1.0000e+08, 4.1397e-02, 4.3905e-02,  ..., 3.6476e-02, 3.6082e-02,
         3.3901e-02],
        [4.1397e-02, 1.0000e+08, 5.5343e-02,  ..., 3.6623e-02, 4.1526e-02,
         3.3089e-02],
        [4.3905e-02, 5.5343e-02, 3.8593e+01,  ..., 3.8938e-02, 3.9379e-02,
         3.5034e-02],
        ...,
        [3.6476e-02, 3.6623e-02, 3.8938e-02,  ..., 1.0000e+08, 3.7660e-02,
         4.2457e-02],
        [3.6082e-02, 4.1526e-02, 3.9379e-02,  ..., 3.7660e-02, 1.0000e+08,
         3.4256e-02],
        [3.3901e-02, 3.3089e-02, 3.5034e-02,  ..., 4.2457e-02, 3.4256e-02,
         5.2256e+01]], device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([0.0025, 0.0025, 0.0025,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([0.0000e+00, 0.0000e+00, 1.3323e-05,  ..., 1.3763e-05, 1.1833e-05,
        1.1262e-05], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=1, unweighted proportion=0]iteration 2 weights (sorted descending): 
tensor([0.0025, 0.0025, 0.0025,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([1.4888e-05, 1.2439e-05, 1.3287e-05,  ..., 1.4046e-05, 1.1598e-05,
        1.1165e-05], device='cuda:0')
Iteration 10000 / 10000: 100%|███████████████████████████████████████████████| 10000/10000 [01:25<00:00, 116.40it/s, weighted proportion=0.611, unweighted proportion=0.479]

Weighted proportion: 0.6108 (0.1165 too low, 0.2727 too high), average length: 0.02077501006126404
Unweighted proportion: 0.4788 (0.2617 too low, 0.2595 too high), average length: 0.021033465713262558
Saved results to results_overlapping-yahoo-yahoo.csv

Running experiment partitioning agnews dataset into unlabeled and labeled
Unlabeled data is a subset of labeled data
labeled subset size: 760/7600, unlabeled subset size: 76/7600

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 119/119 [00:18<00:00,  6.60it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 238/238 [00:12<00:00, 18.74it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[0.0000e+00, 2.5132e+01, 2.6759e+01,  ..., 2.4294e+01, 2.7002e+01,
         2.0026e+01],
        [2.5132e+01, 1.5625e-02, 1.0374e+01,  ..., 2.6443e+01, 2.5064e+01,
         2.3944e+01],
        [2.6759e+01, 1.0374e+01, 7.8125e-03,  ..., 2.7558e+01, 2.3103e+01,
         2.6487e+01],
        ...,
        [2.4294e+01, 2.6443e+01, 2.7558e+01,  ..., 1.9137e-02, 2.8424e+01,
         2.6537e+01],
        [2.7002e+01, 2.5064e+01, 2.3103e+01,  ..., 2.8424e+01, 7.8125e-03,
         2.8190e+01],
        [2.0026e+01, 2.3944e+01, 2.6487e+01,  ..., 2.6537e+01, 2.8190e+01,
         1.7469e-02]], device='cuda:0')
full weights matrix: 
tensor([[1.0000e+08, 3.9789e-02, 3.7370e-02,  ..., 4.1163e-02, 3.7034e-02,
         4.9935e-02],
        [3.9789e-02, 6.4000e+01, 9.6391e-02,  ..., 3.7817e-02, 3.9898e-02,
         4.1764e-02],
        [3.7370e-02, 9.6391e-02, 1.2800e+02,  ..., 3.6287e-02, 4.3285e-02,
         3.7755e-02],
        ...,
        [4.1163e-02, 3.7817e-02, 3.6287e-02,  ..., 5.2256e+01, 3.5181e-02,
         3.7683e-02],
        [3.7034e-02, 3.9898e-02, 4.3285e-02,  ..., 3.5181e-02, 1.2800e+02,
         3.5473e-02],
        [4.9935e-02, 4.1764e-02, 3.7755e-02,  ..., 3.7683e-02, 3.5473e-02,
         5.7243e+01]], device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([0.0132, 0.0132, 0.0132,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([7.1669e-05, 6.4106e-05, 6.3151e-05,  ..., 7.1981e-05, 5.0331e-05,
        6.2151e-05], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=1, unweighted proportion=1]iteration 2 weights (sorted descending): 
tensor([0.0133, 0.0132, 0.0132,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([0.0000e+00, 6.0326e-05, 5.6172e-05,  ..., 6.8268e-05, 4.7414e-05,
        6.0333e-05], device='cuda:0')
Iteration 10000 / 10000: 100%|███████████████████████████████████████████████| 10000/10000 [01:06<00:00, 150.39it/s, weighted proportion=0.668, unweighted proportion=0.494]

Weighted proportion: 0.6676 (0.135 too low, 0.1974 too high), average length: 0.05536245586276054
Unweighted proportion: 0.4938 (0.2571 too low, 0.2491 too high), average length: 0.056050370717048645
Saved results to results_overlapping-agnews-agnews.csv

Running experiment partitioning yahoo dataset into unlabeled and labeled
Unlabeled data and labeled data are disjoint
labeled subset size: 39600/40000, unlabeled subset size: 400/40000

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 625/625 [01:34<00:00,  6.62it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1250/1250 [02:00<00:00, 10.39it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[0.0000e+00, 2.4156e+01, 2.2776e+01,  ..., 2.7416e+01, 2.7715e+01,
         2.9497e+01],
        [2.4156e+01, 0.0000e+00, 1.8069e+01,  ..., 2.7305e+01, 2.4081e+01,
         3.0222e+01],
        [2.2776e+01, 1.8069e+01, 2.5911e-02,  ..., 2.5682e+01, 2.5394e+01,
         2.8544e+01],
        ...,
        [2.7416e+01, 2.7305e+01, 2.5682e+01,  ..., 0.0000e+00, 2.6554e+01,
         2.3553e+01],
        [2.7715e+01, 2.4081e+01, 2.5394e+01,  ..., 2.6554e+01, 0.0000e+00,
         2.9192e+01],
        [2.9497e+01, 3.0222e+01, 2.8544e+01,  ..., 2.3553e+01, 2.9192e+01,
         1.9137e-02]], device='cuda:0')
full weights matrix: 
tensor([[1.0000e+08, 4.1397e-02, 4.3905e-02,  ..., 3.6476e-02, 3.6082e-02,
         3.3901e-02],
        [4.1397e-02, 1.0000e+08, 5.5343e-02,  ..., 3.6623e-02, 4.1526e-02,
         3.3089e-02],
        [4.3905e-02, 5.5343e-02, 3.8593e+01,  ..., 3.8938e-02, 3.9379e-02,
         3.5034e-02],
        ...,
        [3.6476e-02, 3.6623e-02, 3.8938e-02,  ..., 1.0000e+08, 3.7660e-02,
         4.2457e-02],
        [3.6082e-02, 4.1526e-02, 3.9379e-02,  ..., 3.7660e-02, 1.0000e+08,
         3.4256e-02],
        [3.3901e-02, 3.3089e-02, 3.5034e-02,  ..., 4.2457e-02, 3.4256e-02,
         5.2256e+01]], device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([3.4166e-05, 3.4133e-05, 3.4111e-05,  ..., 0.0000e+00, 0.0000e+00,
        0.0000e+00], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([2.8344e-05, 2.2533e-05, 2.4164e-05,  ..., 2.5201e-05, 2.1523e-05,
        2.0272e-05], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=0, unweighted proportion=0]iteration 2 weights (sorted descending): 
tensor([3.2340e-05, 3.2098e-05, 3.2066e-05,  ..., 0.0000e+00, 0.0000e+00,
        0.0000e+00], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([2.6793e-05, 2.2558e-05, 2.4114e-05,  ..., 2.5572e-05, 2.1452e-05,
        2.0506e-05], device='cuda:0')
Iteration 10000 / 10000: 100%|███████████████████████████████████████████████| 10000/10000 [01:19<00:00, 125.09it/s, weighted proportion=0.133, unweighted proportion=0.174]

Weighted proportion: 0.1331 (0.2864 too low, 0.5805 too high), average length: 0.006537673538923264
Unweighted proportion: 0.1736 (0.4074 too low, 0.419 too high), average length: 0.006688667994737625
Saved results to results_L-yahoo-U-yahoo.csv

Running experiment partitioning agnews dataset into unlabeled and labeled
Unlabeled data and labeled data are disjoint
labeled subset size: 7524/7600, unlabeled subset size: 76/7600

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 119/119 [00:18<00:00,  6.53it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 238/238 [00:12<00:00, 18.66it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[0.0000e+00, 2.5132e+01, 2.6759e+01,  ..., 2.4294e+01, 2.7002e+01,
         2.0026e+01],
        [2.5132e+01, 1.5625e-02, 1.0374e+01,  ..., 2.6443e+01, 2.5064e+01,
         2.3944e+01],
        [2.6759e+01, 1.0374e+01, 7.8125e-03,  ..., 2.7558e+01, 2.3103e+01,
         2.6487e+01],
        ...,
        [2.4294e+01, 2.6443e+01, 2.7558e+01,  ..., 1.9137e-02, 2.8424e+01,
         2.6537e+01],
        [2.7002e+01, 2.5064e+01, 2.3103e+01,  ..., 2.8424e+01, 7.8125e-03,
         2.8190e+01],
        [2.0026e+01, 2.3944e+01, 2.6487e+01,  ..., 2.6537e+01, 2.8190e+01,
         1.7469e-02]], device='cuda:0')
full weights matrix: 
tensor([[1.0000e+08, 3.9789e-02, 3.7370e-02,  ..., 4.1163e-02, 3.7034e-02,
         4.9935e-02],
        [3.9789e-02, 6.4000e+01, 9.6391e-02,  ..., 3.7817e-02, 3.9898e-02,
         4.1764e-02],
        [3.7370e-02, 9.6391e-02, 1.2800e+02,  ..., 3.6287e-02, 4.3285e-02,
         3.7755e-02],
        ...,
        [4.1163e-02, 3.7817e-02, 3.6287e-02,  ..., 5.2256e+01, 3.5181e-02,
         3.7683e-02],
        [3.7034e-02, 3.9898e-02, 4.3285e-02,  ..., 3.5181e-02, 1.2800e+02,
         3.5473e-02],
        [4.9935e-02, 4.1764e-02, 3.7755e-02,  ..., 3.7683e-02, 3.5473e-02,
         5.7243e+01]], device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([0.0002, 0.0002, 0.0002,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([1.3197e-04, 1.2520e-04, 1.1970e-04,  ..., 1.3459e-04, 9.4916e-05,
        1.1385e-04], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=0, unweighted proportion=0]iteration 2 weights (sorted descending): 
tensor([0.0002, 0.0002, 0.0002,  ..., 0.0000, 0.0000, 0.0000], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([1.3366e-04, 1.2312e-04, 1.1646e-04,  ..., 1.3444e-04, 9.6661e-05,
        1.1678e-04], device='cuda:0')
Iteration 10000 / 10000: 100%|███████████████████████████████████████████████| 10000/10000 [01:00<00:00, 165.04it/s, weighted proportion=0.175, unweighted proportion=0.118]

Weighted proportion: 0.1747 (0.4185 too low, 0.4068 too high), average length: 0.017813615381717683
Unweighted proportion: 0.1184 (0.4793 too low, 0.4023 too high), average length: 0.017835021305084228
Saved results to results_L-agnews-U-agnews.csv

Running experiment with agnews as labeled and yahoo as unlabeled
Unlabeled data and labeled data are disjoint
labeled subset size: 7600/7600, unlabeled subset size: 400/40000

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 119/119 [00:17<00:00,  6.63it/s]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 625/625 [01:39<00:00,  6.28it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1250/1250 [02:00<00:00, 10.36it/s]
Calculating vector encodings of labeled dataset...
Batches: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 238/238 [00:11<00:00, 20.95it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[29.6270, 12.9466, 10.8294,  ..., 28.1690, 25.2883, 27.0854],
        [28.9867, 23.7537, 25.3530,  ..., 26.9486, 26.5210, 23.1161],
        [22.4502, 17.4352, 22.1472,  ..., 25.7116, 27.1986, 15.4379],
        ...,
        [22.5897, 25.4720, 25.8113,  ..., 10.2270, 27.2755, 25.7641],
        [28.4945, 27.6356, 26.5148,  ..., 27.0458, 15.5838, 25.7127],
        [27.9833, 28.6620, 29.9397,  ..., 20.7542, 29.7776, 29.3008]],
       device='cuda:0')
full weights matrix: 
tensor([[0.0338, 0.0772, 0.0923,  ..., 0.0355, 0.0395, 0.0369],
        [0.0345, 0.0421, 0.0394,  ..., 0.0371, 0.0377, 0.0433],
        [0.0445, 0.0574, 0.0452,  ..., 0.0389, 0.0368, 0.0648],
        ...,
        [0.0443, 0.0393, 0.0387,  ..., 0.0978, 0.0367, 0.0388],
        [0.0351, 0.0362, 0.0377,  ..., 0.0370, 0.0642, 0.0389],
        [0.0357, 0.0349, 0.0334,  ..., 0.0482, 0.0336, 0.0341]],
       device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([0.0002, 0.0002, 0.0002,  ..., 0.0001, 0.0001, 0.0001], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=0, unweighted proportion=0]iteration 2 weights (sorted descending): 
tensor([0.0002, 0.0002, 0.0002,  ..., 0.0001, 0.0001, 0.0001], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([0.0001, 0.0001, 0.0001,  ..., 0.0001, 0.0001, 0.0001], device='cuda:0')
Iteration 10000 / 10000: 100%|█████████████████████████████████████████████| 10000/10000 [01:12<00:00, 138.86it/s, weighted proportion=0.0022, unweighted proportion=0.0019]

Weighted proportion: 0.0022 (0.9978 too low, 0.0 too high), average length: 0.0176677077293396
Unweighted proportion: 0.0019 (0.9981 too low, 0.0 too high), average length: 0.017749051731824873
Saved results to results_L-agnews-U-yahoo.csv

Running experiment with yahoo as labeled and agnews as unlabeled
Unlabeled data and labeled data are disjoint
labeled subset size: 40000/40000, unlabeled subset size: 76/7600

Precomputing predicted values on datasets...
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 625/625 [01:35<00:00,  6.51it/s]
100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 119/119 [00:17<00:00,  6.67it/s]
Generating kNN matrix...
Calculating vector encodings of unlabeled dataset...
Batches: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 238/238 [00:11<00:00, 21.58it/s]
Calculating vector encodings of labeled dataset...
Batches: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 1250/1250 [01:59<00:00, 10.43it/s]
Calculating distances...
pairwise distances matrix: 
tensor([[29.6270, 28.9867, 22.4502,  ..., 22.5897, 28.4945, 27.9833],
        [12.9466, 23.7537, 17.4352,  ..., 25.4720, 27.6356, 28.6620],
        [10.8294, 25.3530, 22.1472,  ..., 25.8113, 26.5148, 29.9397],
        ...,
        [28.1690, 26.9486, 25.7116,  ..., 10.2270, 27.0458, 20.7542],
        [25.2883, 26.5210, 27.1986,  ..., 27.2755, 15.5838, 29.7776],
        [27.0854, 23.1161, 15.4379,  ..., 25.7641, 25.7127, 29.3008]],
       device='cuda:0')
full weights matrix: 
tensor([[0.0338, 0.0345, 0.0445,  ..., 0.0443, 0.0351, 0.0357],
        [0.0772, 0.0421, 0.0574,  ..., 0.0393, 0.0362, 0.0349],
        [0.0923, 0.0394, 0.0452,  ..., 0.0387, 0.0377, 0.0334],
        ...,
        [0.0355, 0.0371, 0.0389,  ..., 0.0978, 0.0370, 0.0482],
        [0.0395, 0.0377, 0.0368,  ..., 0.0367, 0.0642, 0.0336],
        [0.0369, 0.0433, 0.0648,  ..., 0.0388, 0.0389, 0.0341]],
       device='cuda:0')
Generating confidence intervals...
Iteration 1 / 10000:   0%|                                                                                                                        | 0/10000 [00:00<?, ?it/s]iteration 1 weights (sorted descending): 
tensor([3.4759e-05, 3.4341e-05, 3.4248e-05,  ..., 1.8416e-05, 1.8180e-05,
        1.7986e-05], device='cuda:0')
iteration 1 weights (ordered by labeled index): 
tensor([2.4611e-05, 2.1077e-05, 2.5284e-05,  ..., 3.2538e-05, 2.0626e-05,
        2.1074e-05], device='cuda:0')
Iteration 2 / 10000:   0%|                                                                        | 0/10000 [00:00<?, ?it/s, weighted proportion=0, unweighted proportion=0]iteration 2 weights (sorted descending): 
tensor([4.3030e-05, 4.3009e-05, 4.2824e-05,  ..., 1.8483e-05, 1.8336e-05,
        1.8072e-05], device='cuda:0')
iteration 2 weights (ordered by labeled index): 
tensor([2.4574e-05, 2.1289e-05, 2.6664e-05,  ..., 3.2081e-05, 2.1194e-05,
        2.1532e-05], device='cuda:0')
Iteration 10000 / 10000: 100%|██████████████████████████████████████████████| 10000/10000 [01:02<00:00, 161.09it/s, weighted proportion=0.0016, unweighted proportion=0.048]

Weighted proportion: 0.0016 (0.061 too low, 0.9374 too high), average length: 0.006504463416337967
Unweighted proportion: 0.048 (0.061 too low, 0.891 too high), average length: 0.006654113101959229
Saved results to results_L-yahoo-U-agnews.csv
